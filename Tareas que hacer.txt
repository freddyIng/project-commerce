-Terminar la vista index. (casi terminada, falta hacerla responsiva)

-Terminar la vista de la pagina de registro (falta añadir los estados y correspondientes municipios, y tambien hacerla 
responsiva)

-Terminar la funcionalidad de registro. Terminada. Falta aplicar la validacion y sanitizacion de datos tanto del 
lado del cliente como en el servidor), y tambien, la modificacion del estado y ciudad (seran tipo select) en el formulario
de datos. Obviamente tambien debo verificar que en el servidor el archivo enviado sea una imagen, de otra manera sera 
aceptado (sea archivo de texto, doc, entre otros). Otra cosa: Tambien falta la verificacion por correo electronico. Usando 
nodemailer y una cuenta de correo del negocio (como outlook?) podria enviar la verificacion. Como no espero un registro
masivo de usuarios, entonces no necesitare pagar por el servicio que ofrece sendgrid, o peor, hacer mi propio servidor de 
email. Por ultimo, el hash+salt de la contraseña (con bcrypt). Por supuesto, verificar que tanto el email como el nombre
del comercio sean unicos.

-Terminar la funcionalidad de inventario. Falta mostrar las fotos de los productos
y hacer que el formulario que se encarga de agregar los productos use fetch en vez de ser uno tradicional, para asi renderizar
desde el cliente los cambios. Probablemente deba hacer ese formulario un componente de react.

-Empezar a implementar el registro e inicio de sesion de clientes: Comprobe que es incomodo y poco optimo hacer la compra
sin un registro formal de un cliente. Por ejemplo, si un cliente hace una transaccion, y se le va la electricidad, o el internet,
o por alguna razon la computadora o equipo que uso no esta a su alcanze una vez hecha la compra (las cookies guardaran los datos
de la transaccion del tiempo, pero solo sirven si el cliente accede al navegador en el mismo equipo), entonces no podra
ver los datos de su transaccion. Obligarlo a que descargue un pdf con los datos de la transaccion es incomodo... Por eso necesito
que se registre e inicie sesion, asi podra consultar sus transacciones en cualquier momento.

-Empezar la funcionalidad de catalogo y carrito de compra para el cliente.

-Empezar la funcionalidad de notificaciones de compras/pedidos al comercio.

-Terminar la funcionalidad de inicio de sesion. Terminada. Falta la validacion y sanitizacion de datos, y bcrypt para generar y
comparar el hash de la contraseña.

Nota: Usar websockets(socketio) para hacer la aplicacion en tiempo real. Por ejemplo:
Si un administrador agrega, actualiza o elimina un nuevo producto en su inventario, ese cambio se debe reflejar instantaneamente
en la vista que un cliente tenga del catalogo de productos del comercio de ese administrador. Lo mismo cundo un cliente
hace una compra/pedido, se confirma la compra, etc, y las respectivas notificaciones a la pagina del administrador.
