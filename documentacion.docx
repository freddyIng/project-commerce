Nombre del proyecto: Aun por definir

Descripcion del proyecto: Aplicacion web general de comercio electronico

Objetivo del proyecto: Proveer una solucion tecnologica a todo comercio en Venezuela que no posea un website, con el fin de tal comercio adquiera presencia en internet y pueda ofrecer una alternativa a sus clientes para que estos puedan consultar en todo momento (siempre y cuando tengan accesoa internet) los productos que ofrece el comercio y hacer compras online en esos comercios. 

A)-Vista general:
Entonces, la idea principal es proveer a los comercios un sistema que constara de los siguientes componentes principales:
-Sistema de gestion 
-Sistema de tienda online
-Sistema de busqueda 

Pasare a describir los sistemas:

1-Sistema de gestion: Sera la vista principal para el comercio. Este sistema constara de los siguientes subsistemas:
 1.1-Edicion de datos: No hay mucho que decir. Basicamente la funcionalidad que le 
 permitira al comercio editar sus distintos datos de interes, como: email, 
 contraseña, numero telefonico, nombre del comercio, estado, ciudad o municipio,
 direccion, descripcion del comercio, foto del comercio, etc. Tambien, se podran
 editar datos como el color de preferencia de la pagina del comercio, los tipos de  
 fuentes, el tipo de vista de los productos (cuadrada, circulra, rectangular). Etos
 datos podran ser desbloqueados de manera “premium”.
 
 1.2-Inventario: El personal del comercio podra insertar, borrar y actualizar los 
 datos de los distintos productos destinados a la venta, los cuales se mostraran a 
 los clientes via el sistema de tienda online.

 1.3-Pedidos, pagos, compras y despacho: El comercio debera poder visualizar
 los distintos pedidos que se hacen en su tienda online a traves del tiempo. 
 Ciertamente, esta funcionalidad tiene que ser en tiempo real: Una vez que un 
 cliente haga un pedido en la tienda, se debe notificar directamente a este 
 subsistema que ese cliente ha hecho un pedido. Los pedidos estaran en estado 
 “pendiente” si no han sido entragados y “entregados” caso contrario. 
 Tambien, podran ser “cancelados” tanto por el cliente como por el comercio. 
 Tambien los pedidos estaran en estatus “pagados” y “no pagados”, ya que el pago
 debera ser comprobado manualmente por el comerciante (explicare esto en detalle al 
 momento de describir el subsitema de pago de la tienda online).
 
 1.4-Gestion de empleados: El gerente del comercio (o alguien encargado de 
 gestionra los empleados) podra insertar, borrar y actualizar los datos de los 
 empleados que trabajen en el mismo. Se podra clasificar por categoria. Tendran su 
 salario y fecha de pago. Tambien se le podra dar seguimiento a los dias y horarios 
 de trabajo, y se le marcaran las respectivas inasistencias, fallas u 
 observaciones.

 1.5-Estadisticas: La funcionalidad de este subsistema sera proveer una vista 
 amigable y estetica a traves del tiempo al personal del comercio acerca de las 
 variables de interes, como: Cantidad de visitas a la tienda online, cantidad de 
 pediddos y compras diarios, productos mas vendidos, ingresos, entre otras 
 variables de interes.

 1.6-Pago de mensualidad, planes de mensualidad y pago por funciones premium:
 En este modulo, es donde el comercio podra hacer el pago a los dueños de la 
 aplicación para que este pueda seguir el servicio.






2-Sistema de tienda online: Sera la vista principal para los clientes del comercio.
A modo de analogia, sera el “frontend” de una parte del sistema de gestion
(inventario, pedidos y compras). Este sistema constara de los siguientes subsistemas:
 2.1-Catalogo: Se le presentara al cliente, aparte de lo obvio (nombre del 
 comercio, foto del comercio, etc) los distintos productos en una vista 
 estetica y responsiva. Se mostrara la foto del producto, el nombre y la 
 descripcion, el precio, la cantidad disponible y tambien el boton “comprar” que se 
 añadira a un carrito de compras. 

 2.2-Carrito de compras: Los distintos productos que el cliente vaya agregando a
 su carrito. El cliente podra añadir y borrar libremente los productos. Tambien,
 es en la vista de este carrito donde el cliente podra darle al boton “comprar”
 para hacer el correspondiente pedido y compra de los productos.

 2.3-Seguimiento del pedido: Una vez que el cliente haga un pedido, y este haya
 sido exitoso, se le devolvera un ticket (en formato pdf) de informacion que tendra 
 los datos que el usuario haya introducido al momento de la compra, los detalles de 
 su compra y un codigo unico que servira para reforzar la identificacion de tal 
 compra. 
 Usando este ticket, el usuario podra darle seguimiento a su compra en el 
 subsistema de seguimiento (el cual, al igual que le carrito de compras, estara 
 presente en todo momento en la interfaz de la tienda en linea).
 
 2.4-Subsistema de seguimiento de compra: Recibira como datos de entrada
 los datos de la compra, el cliente y el codigo de identificacion, para que el 
 cliente pueda ver los detalles de su compra, su pago, el estado de su pedido y 
 tambien, el mismo cliente podra cancelar tal pedido, actualizarlo (añadir o quitar
 productos) e incluso, editar los detalles de su compra en caso de que estos sean 
 incorrectos.

 Nota: Estoy asumiendo que los clientes del comercio no podra registrarse e iniciar
 sesion en la aplicación. Pero, esto podria cambiar. Por ahora, el enfoque es que 
 los clientes del comercio no puedan registrarse. Pero eso podria cambiar en un 
 futuro. Actualizacion: Ha cambiado el enfoque. Ahora los cientes deben registrarse 
 en la aplicación.

 3-Sistema de busqueda: Este sistema es un plus, y seria el resultado de mi gran 
 ambicion: El google de las cosas. Esencialmente, permite a culquier usuario buscar 
 productos dada su posicion geografica (pais, estado, municipio, direccion, etc) en 
 forma de categorias (viveres, charcuteria, bebidas, panaderia, reposteria,  
 farmacia, etc). El resultado de esta busqueda le mostrara al usuario los 
 establecimientos comerciales en la zona geografica que ofrecen tales productos. 
 Cabe destacar que usare la api de google maps para ofrecer resultados excelentes.    
 Y obviamente, tales establecimientos comerciales seran los registrados en mi 
 aplicación de comercios. Asi comenzare a cocinar mi segunda ambicion: El google de 
 las cosas, empezando por venezuela, y luego expandiendome a otras latitudes.
 

 En fin, esta es solo la vista general. Ciertamente, toda la complejidad y los 
 detalles tecnicos seran desglosados al momento de hacer los diagramas de clases, 
 base de datos, descripcion tecnica de los modulos, etc.

 B)-Plan de negocio (o modelo de negocio?):  
 Esencialmente, el modelo de negocio sera de subscripcion. Los clientes pagan
 una cuota mensual para seguir usando el servicio. Aparte de eso, puedo considerar
 insertar anuncios.
 La idea principal, una vez terminada y probada la aplicación web, es publicarla en  
 internet, aprovechando los 100 dolares de credito gratis que ofrece digital ocean. 
 Ciertamente, necesitare una inversion inicial de aproximadamente 15-17 dolares 
 para poner en marcha la aplicación web. 5$ de paypal obligatorios para acceder 
 usar digital ocean y los 100$ de credito gratis, los 10 o 12 para el nombre de 
 dominio de la aplicación. Podremos usar 20$ mensuales para el pago de los 
 servidores/infraestructura en digital ocean. 10$ para el servidor de aplicación y 
 10$ para el servidor de base de datos. Los “droplets” de digital ocean que cuestan  
 10$ tienen las siguientes caracteristicas:
 -1 CPU
 -2 GB de RAM
 -50 GB de SSD
 -2 TB de transferencia
 Asumo que el cpu tiene tecnologia hyperthreading, asi que se pueden lanzar dos 
 threads en cada proceso. Como nodejs solo usa un nucleo, esto no sera problema
 (o al menos en teoria). En cuanto a la base de datos, asumire que tampoco
 tendre problemas de rendimiento. Si hay problemas, siempre puedo usar el de 15$, 
 que tiene la misma cantidad de RAM, pero 2 CPU, 60 GB de SSD y 3 TB de  
 transferencia.

 En fin, una vez hecho esto, Leandro empezara a actuar: El se encargara de ir a los
 distintos establecimientos comerciales para convencerlos de que usen el software.
 El pago sera mensual, y estimo que un buen precio esta entre 10$-8$ para comercios
 grandes o con un alto volumen de clientes, y entre 2$-4$ para comercios pequeños.
 Le aclararemos al cliente que este sera un precio inicial, pero que puede aumentar
 dependiendo de si la cantidad de usuarios mensual sobrepasa cierto limite. 
 Digamos, que el limite es 20000 visitas mensuales y 1000 usuarios concurrentes. 
 Por cada usuario extra, tanto en visitas, como en concurrentes, se le sumara 3 
 centavos de dólar al cobro mensual fijo. Tambien, se le podra cobrar a los 
 comercios funciones “premium” que consisten en por ejemplo, modificar el color y  
 estilo de la pagina, pago por bitcoin, criptomonedas, etc.

 Si todo marcha bien, estimo que digamos, en 3 meses, tendremos 20 comercios 
 afiliados a nuestro servicio. Eso equivale a unas ganancias de 200$-160$, de los
 cuales, si pasan los meses y el credito de digital ocean se acaba, destinaremos
 entre 20, 30 o incluso 40 dolares al mantenimiento de infraestructura. Dejandonos
 minimo, entre 160, 120 dolares de ganancias. Mitad para mi y mitad para leandro.
 
 Despues de conseguir una base de usuarios decente, la idea es seguir trabajando
 en la empresa. Yo en el software, haciendo mantenimiento, monitorizando la 
 aplicación y añadiendole mas caractersiticas, y leandro buscando mas clientes 
 potenciales, y atendiendo las distintas preguntas (y quejas) de nuestros clientes 
 fijos. Estimo que en un año, por ejemplo, podriamos tener hasta 50 u 80 comercios…
 Cabe destacar que tendremos que hacer no solo conexiones en cojedes, tambien
 en portuguesa(acarigua), valencia, barquisimeto… Con eso en mente, podremos 
 lograr la cantidad de comercios estimadas, siempre y cuando el software sea de 
 calidad y leandro se las apañe para convencer a los clientes de usar el software.

 Llevara mucho trabajo, pero estoy seguro de que este negocio puede ser exitoso.
 Si no lo es, al menos, con los pocos clientes que consigamos, podemos convencerlos
 para que instalen malware en sus equipos, y extorsionarlos y robar sus datos :p

 Ganar-Ganar
  
 A parte de la inversion inicial de los 15-17 dolares, leandro tendra que invertir 
 tiempo y dinero en ir fuera de san carlos a buscar clientes en valencia, acarigua 
 y posiblemente barquisimeto, pero eso sera despues de capturar clientes en san 
 carlos. Los chinos, panaderias, bodegones, supermercados son mis dianas.

 Supermercados, bodegones, tiendas de charcuteria, bodegas, panaderias, farmacias, 
 tiendas de ropa, zapaterias…
 Literalmente cualquier establecimiento comercial es un cliente potencial.
 Tambien, podria crear un modulo que este destinado a restaurantes, sitios de
 comida rapida, hoteles, etc. Sera algo universal, mi objetivo: Crear un imperio.
 Cada “perfil” del cliente se identificara mediante una url distinta, se
 diferenciaran en su nombre comercial.

 C)-Modelo de datos: Describire las diferentes tablas y sus relaciones de las base
 de datos. Por ahora, escribire todo en SQL, para luego, con una herramienta de 
 software, generar el diagrama entidad-relacion a partir de las sentencias de 
 creacion de tablas SQL. Estas instrucciones podran cambiar en un futuro, a medida
 que los detalles de implementacion del sistema vayan aclarandose y que se me 
 ocurran nuevas ideas. Las instrucciones de creacion de base de datos se encuentran
 en el archivo “db.txt”.

 D)-Diagrama de clases: En esta etapa, se hace el respectivo 
 diagrama y descripcion de las distintas clases, sus atributos, comportamientos
 y relaciones con otras clases.

 
 E)-Diagrama de casos de uso: En esta etapa, usare herramientas graficas para hacer
 el respectivo diagrama de casos de uso.


 F)-Identificacion de abstracciones: En esta etapa, identificare y agrupare los
 distintos modulos de codigo que ya he usado antes para resolver problemas 
 similares presentados en la construccion de este software. El registro e inicio de 
 sesion de usuarios, la subida y eliminacion de fotos, por ejemplo, es codigo que 
 puedo reutilizar.

 G)-Codificacion: En esta etapa, es cuando comenzare verdaderamente a programar
 la aplicación. Usare como guia el modelo de datos, diagrama de clases y diagrama 
 de casos de uso. Las tecnologias que usare son las siguientes:
 -Frontend: Boostrap y Vue.js.
 -Backend: Expressjs
 -Servidor: Nginx
 -Base de datos: Postgresql y redis

 7)-Testing: En esta etapa, creare los casos de prueba para las distintas clases
 y modulos de mi aplicación, tanto individuales como en conjunto (testing unitario
 y testing integral). Aparte de eso, necesitare hacer una prueba de rendimiento
 (con apacheJMeter) y una prueba de seguridad (pentesting, usando metasploit tal 
 vez).

 8)-
 
 
 
 

 
 

 

 


